// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  firstName String
  lastName  String
  email     String     @unique
  password  String
  role      String     @default("user")
  Service   Service[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Booking   Booking[]
  Reviews   Reviews[]
  Profile   Profile[]
  Bookmark  Bookmark[]
}

model Profile {
  id                String             @id() @default(uuid())
  userId            String
  user              User               @relation(fields: [userId], references: [id])
  fullName          String
  gender            String
  contactNo         String
  presentAddress    String
  avatar            String
  educationalStatus educationalStatus?
  institution       String
  standard          String?
  designation       String?
  degree            String?
  yearOfExperience  String?            @default("0")
  topicOfExpertise  String[]           @default([""])
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
}

model Service {
  id          String      @id @default(uuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  thumbnail   String
  title       String
  language    String
  authorName  String
  authorEmail String
  authorImage String
  description String
  category    String
  fee         Float       @default(0)
  badge       String[]    @default([])
  schedule    String?
  lessonType  serviceType @default(pre_recorded)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  Booking     Booking[]
  Reviews     Reviews[]
  Bookmark    Bookmark[]
}

model Bookmark {
  id        String  @id @default(uuid())
  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  quantity  Int     @default(1)
}

model Booking {
  id        String        @id @default(uuid())
  status    bookingStatus @default(pending)
  userId    String
  user      User          @relation(fields: [userId], references: [id])
  serviceId String
  service   Service       @relation(fields: [serviceId], references: [id])
}

model Reviews {
  id        String  @id @default(uuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])
  rating    String
  text      String  @default("")
}

model Blog {
  id          String   @id @default(uuid())
  title       String
  description String
  thumbnail   String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum educationalStatus {
  studying
  graduated
  dropout
}

enum serviceType {
  pre_recorded
  live
}

enum bookingStatus {
  pending
  cancelled
  booked
  completed
}
